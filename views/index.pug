extends layout

block styles
  link(as='font', type='font/woff2', href='fonts/roboto/Roboto-Regular.woff2', crossorigin='anonymous')
  link(as='font', type='font/woff2', href='fonts/roboto/Roboto-Regular.woff2', crossorigin='anonymous')
  link(rel='stylesheet', type='text/css', href='lib/fontawesome/5.15.3/css/regular.min.css')
  link(rel='stylesheet', type='text/css', href='lib/fontawesome/5.15.3/css/solid.min.css')
  link(rel='stylesheet', type='text/css', href='lib/fontawesome/5.15.3/css/fontawesome.min.css')
  link(rel='stylesheet', type='text/css', href='lib/datatables/DataTables-1.10.24/css/dataTables.bootstrap4.css')
  link(rel='stylesheet', type='text/css', href='lib/datatables/Buttons-1.7.0/css/buttons.bootstrap4.css')
  link(rel='stylesheet', type='text/css', href='lib/datatables/ColReorder-1.5.3/css/colReorder.bootstrap4.css')
  link(rel='stylesheet', type='text/css', href='lib/datatables/FixedHeader-3.1.8/css/fixedHeader.bootstrap4.css')
  link(rel='stylesheet', type='text/css', href='lib/datatables/Responsive-2.2.7/css/responsive.bootstrap4.css')
  link(rel='stylesheet', type='text/css', href='lib/datatables/Select-1.3.3/css/select.bootstrap4.css')
  link(rel='stylesheet', type='text/css', href='stylesheets/bootstrap-custom.css')

block scripts
  script(defer src='lib/lodash/4.17.21/lodash.min.js')
  script(defer src='lib/jquery/3.6.0/jquery.min.js')
  script(defer src='lib/bootstrap/4.6.0/js/bootstrap.bundle.min.js')
  script(defer src='lib/splitjs/1.6.4/split.min.js')
  script(defer src='lib/datatables/DataTables-1.10.24/js/jquery.dataTables.js')
  script(defer src='lib/datatables/DataTables-1.10.24/js/dataTables.bootstrap4.js')
  script(defer src='lib/datatables/Buttons-1.7.0/js/dataTables.buttons.js')
  script(defer src='lib/datatables/Buttons-1.7.0/js/buttons.bootstrap4.js')
  script(defer src='lib/datatables/Buttons-1.7.0/js/buttons.colVis.js')
  script(defer src='lib/datatables/ColReorder-1.5.3/js/dataTables.colReorder.js')
  script(defer src='lib/datatables/FixedHeader-3.1.8/js/dataTables.fixedHeader.js')
  script(defer src='lib/datatables/Responsive-2.2.7/js/dataTables.responsive.js')
  script(defer src='lib/datatables/Select-1.3.3/js/dataTables.select.js')
  script(defer src='lib/datatables/Plugins-1.10.24/sorting/ip-address.js')
  script(defer src='lib/datatables/Plugins-1.10.24/sorting/natural-time-delta.js')
  script(defer src='lib/datatables/Plugins-1.10.24/dataRender/hyperLink.js')
  script(defer src='lib/datatables/Plugins-1.10.24/dataRender/intl.js')
  script(defer src='javascripts/index_inc.js')

block content
  //- Define overlay shown when trying to connect to application server
  #connectingOverlay.overlay
    h3 Connecting to application
    .spinner-border.text-primary.my-4(role='status' style='width: 3rem; height: 3rem;')
      span.sr-only Connecting...
    div Trying to establish a connection with the core application server

  //- Define overlay shown when failed to connect to application server
  #offlineOverlay.overlay.invisible
    h5 Server is offline
    p The connection with the core application was lost. Press the button below to try to reconnect or otherwise restart the application.
    button.btn.btn-primary.px-5.my-5(type='button') Reconnect…

  //- MAIN CONTENT
  div.container-fluid.px-0.h-100(style={'font-family': 'Roboto, Noto, sans-serif'})
    nav.navbar.navbar-dark.px-2.bg-primary
      div.px-0.container-fluid.d-flex.justify-content-between
        div
          a.navbar-brand.py-0
            img(src='images/shelly_logo_white.png', height='38px')
            span(style={'font-weight': 'bold', 'font-size': '22px'}) Admin
        div.d-none.d-lg-block
          div#tableButtons
        div
          div.dropdown
            button#dropdownMenuButton.btn.btn-secondary.dropdown-toggle.mx-1.px-3.my-sm-0(type='button' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false')
              | Actions
            .dropdown-menu(aria-labelledby='dropdownMenuButton')
              a.dropdown-item(href='#') Reboot
              a.dropdown-item(href='#') Check for update
              a.dropdown-item(href='#') Update firmware
              a.dropdown-item(href='#') Change password
        div
          button#PreferencesButton.btn.btn-dark.px-3.my-sm-0(type="button") Preferences…
        div.d-none.d-lg-block
          form.form-inline.flex-nowrap
            input#mySearch.form-control.mx-1(type="search", placeholder="Search")
            button.btn.btn-success.d-none.d-lg-block.px-3.my-sm-0(type="submit") Filter
    div.container-fluid.px-0(style={'height': 'calc(100% - 56px)'})
      div#shellylist.row.mx-0.overflow-auto.table-responsive
        div.col-12.my-2
          table#shellies.table.table-striped.table-sm.table-dark.table-borderless.table-hover(style={'width': '100%'})
      div#shellydetails.px-0
        div.col-12.h-100.pb-3.pt-2
          div.card.text-white.my-0.h-100
            div.card-header.bg-primary Shelly details
            div#details.card-body.p-0.h-100.bg-dark

    //- DIALOGS CONTENT FOR MAIN

    //- Define dialog used to capture credentials specific to a single device
    #shellyGetCredsModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='shellyGetCredsModalLabel' aria-hidden='true')
      .modal-dialog
        .modal-content.bg-dark
          .modal-header
            h5#shellyGetCredsModalLabel.modal-title Shelly Access Credentials
          .modal-body
            form
              #shellyGetCredsUsrGroup.form-group
                label.form-label Device account
                input.form-control(type='text' placeholder='Account name')
              #shellyGetCredsPwdGroup.form-group
                label.form-label Password
                .input-group
                  input.form-control(type='password' placeholder='Password')
                  .input-group-append
                    span.input-group-text
                      i.fa.fa-eye-slash
            #shellyGetCredsModalError.alert.alert-danger.invisible
          .modal-footer
            button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
            button.btn.btn-primary(type='button') Save

    //- Define dialog which proxies access to the individual Shelly admin user interface
    #shellyAccessModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='shellyAccessModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-body
            iframe(src='' width='100%' height='100%' frameborder='0' allowtransparency='true')

    //- Define dialog which capture main preferences for Shelly Admin
    #preferencesModal.modal.fade(tabindex='-1' role='dialog' aria-hidden='true')
      .modal-dialog.modal-lg.modal-dialog-centered(style={'max-width': '700px'})
        .modal-content.bg-dark
          .modal-header
            h5#preferencesModalLabel.modal-title Preferences
          .modal-body
            form
              .form-group.row
                label.col-md-12.col-form-label(for='device-discovery') Shelly UI default credentials:
                  .form-group
                    #shellyPrefsUsrGroup.form-group.row
                      label.col-md-5.col-form-label Device account
                      .col-md-7
                        input.form-control(type='text')
                    #shellyPrefsPwdGroup.form-group.row
                      label.col-md-5.col-form-label Password
                      .col-md-7.input-group
                        input.form-control(type='password')
                        .input-group-append
                          span.input-group-text
                            i.fa.fa-eye-slash
              .form-group.row
                label.col-md-12.col-form-label(for='device-discovery') Shelly Device discovery:
                  .form-check
                    input#discoverViaCoAP.form-check-input(type="checkbox", name="", checked)
                    label.col-md-12.form-check-label(for='discoverViaCoAP') Use CoAP:
                  .form-check.form-group
                    input#discoverViaMQTT.form-check-input(type="checkbox", name="", disabled)
                    label.col-md-12.form-check-label(for='discoverViaMQTT') Use MQTT:
                      .form-group.row
                        label.col-md-5.col-form-label(for='mqttServer') MQTT Server
                        .col-md-7
                          input#mqttServer.form-control(type='text' placeholder='mqtt.local:1833', disabled)
                      .form-group.row
                        label.col-md-5.col-form-label(for='mqttAccount') MQTT Account
                        .col-md-7
                          input#mqttAccount.form-control(type='text' placeholder='AccountName', disabled)
                      .form-group.row
                        label.col-md-5.col-form-label(for='mqttPassword') MQTT Password
                        .col-md-7
                          input#mqttPassword.form-control(type='password' placeholder='Password', disabled)
                  .form-check
                    input#discoverViaIP.form-check-input(type="checkbox", name="", disabled)
                    label.col-md-12.form-check-label(for='discoverViaIP') Use IP Scan:
          .modal-footer
            button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
            button.btn.btn-primary(type='button') Save

